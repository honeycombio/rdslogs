version: 2.1

orbs:
  buildevents: honeycombio/buildevents@0.2.8
  aws-cli: circleci/aws-cli@2.0.3

executors:
  linuxgo:
    docker:
      - image: cimg/go:1.18
        environment:
          GO111MODULE: "on"
  pkg:
    ## executor with ruby for installing fpm and building packages
    docker:
      - image: cimg/ruby:latest

commands:
  go-build:
    parameters:
      os:
        description: Target operating system
        type: enum
        enum: ["linux", "darwin"]
        default: "linux"
      arch:
        description: Target architecture
        type: enum
        enum: ["386", "amd64", "arm64"]
        default: "amd64"
    steps:
      - run: |
          GOOS=<< parameters.os >> \
          GOARCH=<< parameters.arch >> \
          CGO_ENABLED=0 \
          buildevents cmd $CIRCLE_WORKFLOW_ID $BUILDEVENTS_SPAN_ID go_build -- \
          go build -ldflags "-X main.BuildID=${CIRCLE_TAG}" \
          -o $GOPATH/bin/rdslogs-<< parameters.os >>-<< parameters.arch >> \
          ./...

jobs:
  setup:
    executor: linuxgo
    steps:
      - buildevents/start_trace
      - run: |
          mkdir workspace
          echo $(( $CIRCLE_BUILD_NUM + 1000 )) > workspace/build_id
          cat workspace/build_id
      - persist_to_workspace:
          root: workspace
          paths:
            - build_id
  watch:
    executor: linuxgo
    steps:
      - buildevents/watch_build_and_finish

  test:
    executor: linuxgo
    steps:
      - buildevents/with_job_span:
          steps:
            - checkout
            - buildevents/berun:
                bename: go_test
                becommand: go test -v ./...
  build_bins:
    executor: linuxgo
    steps:
      - buildevents/with_job_span:
          steps:
            - checkout
            - go-build:
                os: linux
                arch: "386"
            - go-build:
                os: linux
                arch: amd64
            - go-build:
                os: darwin
                arch: amd64
            - go-build:
                os: linux
                arch: arm64

            - run: mkdir -v artifacts; cp -v $GOPATH/bin/rdslogs-* artifacts/

            - run: echo "size=$(du -sb artifacts | cut -f 1)" >> $BASH_ENV
            - buildevents/add_context:
                field_name: artifacts_size_bytes
                field_value: $size

            - persist_to_workspace:
                root: artifacts
                paths:
                  - rdslogs-*
            - store_artifacts:
                path: artifacts/

  publish_github:
    docker:
      - image: cibuilds/github:0.12.2
    steps:
      - buildevents/with_job_span:
          steps:
            - attach_workspace:
                at: artifacts
            - run:
                name: "Publish Release on GitHub"
                command: |
                  echo "about to publish to tag ${CIRCLE_TAG}"
                  ls -l *
                  ghr -draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ./artifacts

  build_docker:
    docker:
      - image: cimg/go:1.18
    steps:
      - run: go install github.com/google/ko@latest
      - checkout
      - setup_remote_docker
      - run:
          name: build docker images and publish locally
          command: ./build-docker.sh

  publish_docker:
    docker:
      - image: cimg/go:1.18
    steps:
      - run: go install github.com/google/ko@latest
      - checkout
      - setup_remote_docker
      - run:
          name: build docker images and publish to Docker Hub
          environment:
            KO_DOCKER_REPO: honeycombio
          command: |
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin;
            ./build-docker.sh

workflows:
  build:
    jobs:
      - setup:
          filters:
            tags:
              only: /.*/
      - watch:
          context: Honeycomb Secrets for Public Repos
          requires:
            - setup
          filters:
            tags:
              only: /.*/
            branches:
              ignore:
                - /pull\/.*/
                - /dependabot\/.*/
      - test:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - build_bins:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - build_docker:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - publish_github:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build_bins
            - build_docker
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish_docker:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build_bins
            - build_docker
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
